<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="botonSiguiente.Imagen" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wPmSj2CEpnOTwAAAABJRU5ErkJggg==
</value>
  </data>
</root>